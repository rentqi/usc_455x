package pa4;

//Name: Tianqi Ren
//USC NetID: tianqire
//CS 455 PA4
//Fall 2017

import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Map;
import java.util.Scanner;
import java.io.File;
import java.util.HashMap;


/**
* A dictionary of all anagram sets. 
* Note: the processing is case-sensitive; so if the dictionary has all lower
* case words, you will likely want any string you test to have all lower case
* letters too, and likewise if the dictionary words are all upper case.
*/

public class AnagramDictionary {

	private Map<String, ArrayList<String>> dicMap;

/**
 * Create an anagram dictionary from the list of words given in the file
 * indicated by fileName.  
 * PRE: The strings in the file are unique.
 * @param fileName  the name of the file to read from
 * @throws FileNotFoundException  if the file is not found
 */
public AnagramDictionary(String fileName) throws FileNotFoundException {
	dicMap = new HashMap<String, ArrayList<String>>();
	File file = new File(fileName);
	Scanner fileScanner = new Scanner(file);
	while(fileScanner.hasNextLine()) {
		String line = fileScanner.nextLine();
		String lineKey = sortStr(line);
		if(dicMap.containsKey(lineKey)) {
			dicMap.get(lineKey).add(line);
		}else {
			ArrayList<String> temp = new ArrayList<String>();
			temp.add(line);
			dicMap.put(lineKey, temp);
		}
	}
}


/**
 * Get all anagrams of the given string. This method is case-sensitive.
 * E.g. "CARE" and "race" would not be recognized as anagrams.
 * @param s string to process
 * @return a list of the anagrams of s
 * 
 */
public ArrayList<String> getAnagramsOf(String s) {
	String lineKey = sortStr(s);
	if(dicMap.containsKey(lineKey)) {
		return dicMap.get(lineKey);
	}else {
		return new ArrayList<String>();
	}
}

/**
 * Sort the given string. 
 * @param str string to be sorted
 * @return a sorted string
 */
private String sortStr(String str) {
	char[] ch = str.toCharArray();
	Arrays.sort(ch);
	return String.copyValueOf(ch);
}

}
